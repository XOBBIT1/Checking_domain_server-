version: "3.9"

services:

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - '6379:6379'

  postgres:
    image: postgres:12
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - '5432:5432'

  backend:
    container_name: backend
    build:
      context: ""
      dockerfile: Dockerfile
    command:  bash -c "python domain_ping/manage.py migrate --noinput &&
              python domain_ping/manage.py  runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    build:
      context: ""
      dockerfile: domain_ping/front/Dockerfile
    ports:
      - '3000:3000'

  worker:
    restart: always
    build: .
    command: ['celery', '-A', 'domain_ping.domain_ping.', 'worker', '-l', 'info', '-P', 'gevent']
    volumes:
      - .:/domain_ping
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
      - backend

  celery_beat:
    restart: always
    build: .
    command: [ 'celery', '-A', 'domain_ping ', 'beat', '-l', 'info', "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
    volumes:
      - .:/domain_ping
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
      - backend
      - worker

volumes:
  postgres_data: